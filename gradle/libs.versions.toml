[versions]

# Android Build Gradle
android-sdk-min = "24"
android-sdk-target = "34"
android-sdk-compile = "34"

# Libraries
kotlin = "2.0.21"
kotlinx-coroutines-core = "1.9.0"
kotlinx-serialization-json = "1.7.3"
androidx-navigation-compose = "2.8.0-alpha10"
androidx-lifecycle-viewmodel-compose = "2.8.2"
activity-compose = "1.9.3"
constraint-layout-compose = "1.1.0"
compose-bom = "2024.10.01"
compiler = "1.5.15"
camera = "1.4.0"
ktor = "3.0.0"
ksoup = "0.3.1"
koin-bom = "3.5.1"
multiplatform-settings = "1.2.0"
sqldelight = "2.0.1"
supabase-bom = "3.0.1"
permissions = "0.17.0"
barcode-scanning = "17.3.0"
text-recognition = "16.0.1"
digital-ink-recognition = "18.1.0"

# Plugins
compose-plugin = "1.6.11"
cocoapods-plugin = "1.9.22"
android-gradle-plugin = "8.5.2"

[libraries]

# Kotlin
jetbrains-kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
jetbrains-kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
jetbrains-kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines-core" }
jetbrains-kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines-core" }
jetbrains-kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization-json" }

# Navigation
jetbrains-androidx-navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "androidx-navigation-compose" }
jetbrains-androidx-lifecycle-viewmodel-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle-viewmodel-compose" }

# Android Compose
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activity-compose" }
androidx-constraint-layout-compose = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "constraint-layout-compose" }

androidx-compose-bom = { module = "androidx.compose:compose-bom", version.ref = "compose-bom" }
androidx-compose-ui = { module = "androidx.compose.ui:ui" }
androidx-compose-runtime = { module = "androidx.compose.runtime:runtime" }
androidx-compose-compiler = { module = "androidx.compose.compiler:compiler", version.ref = "compiler" }
androidx-compose-material3 = { module = "androidx.compose.material3:material3" }
androidx-compose-animation = { module = "androidx.compose.animation:animation" }
androidx-compose-foundation = { module = "androidx.compose.foundation:foundation" }
androidx-compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
androidx-compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
androidx-compose-ui-test-junit4 = { module = "androidx.compose.ui:ui-test-junit4" }
androidx-compose-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest" }

# Android Camera
androidx-camera-core = { module = "androidx.camera:camera-core", version.ref = "camera" }
androidx-camera-view = { module = "androidx.camera:camera-view", version.ref = "camera" }
androidx-camera-video = { module = "androidx.camera:camera-video", version.ref = "camera" }
androidx-camera-camera2 = { module = "androidx.camera:camera-camera2", version.ref = "camera" }
androidx-camera-lifecycle = { module = "androidx.camera:camera-lifecycle", version.ref = "camera" }
androidx-camera-extensions = { module = "androidx.camera:camera-extensions", version.ref = "camera" }

# HTTP Requests
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
mohamedrejeb-ksoup-html = { module = "com.mohamedrejeb.ksoup:ksoup-html", version.ref = "ksoup" }

# Dependency Injection
insert-koin-bom = { module = "io.insert-koin:koin-bom", version.ref = "koin-bom" }
insert-koin-core = { module = "io.insert-koin:koin-core" }
insert-koin-test = { module = "io.insert-koin:koin-test" }
insert-koin-android = { module = "io.insert-koin:koin-android" }
insert-koin-compose = { module = "io.insert-koin:koin-compose" }
insert-koin-android-compose = { module = "io.insert-koin:koin-androidx-compose" }

# Persisting Data
russhwolf-multiplatform-settings-no-arg = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "multiplatform-settings" }

# Local Database
cashapp-sqldelight-native-driver = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight" }
cashapp-sqldelight-sqlite-driver = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqldelight" }
cashapp-sqldelight-android-driver = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
cashapp-sqldelight-coroutines-extensions = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }

# External Database
jan-tennert-supabase-bom = { module = "io.github.jan-tennert.supabase:bom", version.ref = "supabase-bom" }
jan-tennert-supabase-auth-ktx = { module = "io.github.jan-tennert.supabase:postgrest-kt" }
jan-tennert-supabase-realtime-ktx = { module = "io.github.jan-tennert.supabase:postgrest-kt" }
jan-tennert-supabase-postgrest-ktx = { module = "io.github.jan-tennert.supabase:postgrest-kt" }

# Permissions
icerock-moko-permissions = { module = "dev.icerock.moko:permissions", version.ref = "permissions" }
icerock-moko-permissions-test = { module = "dev.icerock.moko:permissions-test", version.ref = "permissions" }
icerock-moko-permissions-compose = { module = "dev.icerock.moko:permissions-compose", version.ref = "permissions" }

# Google ML Kit
google-mlkit-barcode-scanning = { module = "com.google.mlkit:barcode-scanning", version.ref = "barcode-scanning" }
google-mlkit-text-recognition = { module = "com.google.mlkit:text-recognition", version.ref = "text-recognition" }
google-mlkit-digital-ink-recognition = { module = "com.google.mlkit:digital-ink-recognition", version.ref = "digital-ink-recognition" }

[bundles]

androidx-compose = [
    "androidx-compose-ui-tooling-preview",
    "androidx-compose-ui-tooling",
    "androidx-compose-foundation",
    "androidx-compose-animation",
    "androidx-compose-material3",
    "androidx-compose-compiler",
    "androidx-compose-runtime",
    "androidx-compose-ui"
]
androidx-camera = [
    "androidx-camera-extensions",
    "androidx-camera-lifecycle",
    "androidx-camera-camera2",
    "androidx-camera-video",
    "androidx-camera-view",
    "androidx-camera-core"
]
jan-tennert-supabase = [
    "jan-tennert-supabase-auth-ktx",
    "jan-tennert-supabase-realtime-ktx",
    "jan-tennert-supabase-postgrest-ktx"
]
icerock-moko-permissions = [
    "icerock-moko-permissions-compose",
    "icerock-moko-permissions-test"
]
google-mlkit = [
    "google-mlkit-digital-ink-recognition",
    "google-mlkit-barcode-scanning",
    "google-mlkit-text-recognition",
]

[plugins]

# Jetbrains
jetbrains-kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
jetbrains-kotlin-compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
jetbrains-kotlin-plugin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
jetbrains-kotlin-native-cocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "cocoapods-plugin" }
jetbrains-compose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }

# Android
android-library = { id = "com.android.library", version.ref = "android-gradle-plugin" }
android-application = { id = "com.android.application", version.ref = "android-gradle-plugin" }

# Database
cashapp-sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }
